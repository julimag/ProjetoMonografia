%===============================================================================
% CAPITULO 3 - ETX
%===============================================================================
\chapter{ETX}\label{chp:3}%Proposta/Estrategia Proposta/Descricao do Trabalho (Arquitetura e Especificacao)

Esse trabalho apresenta a estratégia ETX para estimativas de tamanhos dos resultados parciais de consultas sobre dados XML fragmentados, replicados e distribuídos. Essa estratégia gera subsídios para a redução dos custos de comunicação no processamento de consulta, visto que a ETX fornece o conhecimento prévio do tamanho dos resultados intermediários envolvidos na consulta.

Essa estratégia não possui algumas das principais deficiências dos trabalhos relacionados, tais como decréscimo da precisão de estimativa com o aumento do tamanho da expressão da consulta e a falta de suporte a documentos com elementos homônimos.

%===================================================================
\section{Características}
%===================================================================
O objetivo principal desse trabalho foi desenvolver uma estratégia capaz de viabilizar a redução de custos de comunicação no processamento de consultas sobre dados XML em um ambiente distribuído. A implementação da ETX fornece meios a mecanismos complexos, como por exemplo modelos de custos, para evitarem a transferência dos maiores resultados parciais.

A ETX atua sobre dados XML fragmentados e replicados, distribuídos nos sítios utilizando qualquer heurística de alocação de dados. A fragmentação adotada foi a horizontal proposta por \cite{Andrade06}, a qual restringe a base de dados em coleção homogênea de documentos. A ETX suporta documentos com elementos homônimos e consultas em XQuery com algumas restrições que são citadas mais adiante. Os documentos devem ser livres de elementos do tipo ID/IDREF.

A partir de uma consulta global XPath ou XQuery fornecida pelo usuário, a estratégia é capaz de mensurar os resultados parciais em cada fragmento sem precisar executar a consulta. Para conhecer os tamanhos dos resultados sem realizar o processamento da consulta, a ETX faz uso de informaçãos armazenadas no catálogo. A partir dessas informações, são geradas as estimativas.

A manipulação dos dados XML para geração do catálogo é feita em memória principal. Para isso, a ETX recupera cada um dos documentos XML da memória secundária, constrói seus sumários de estrutura com esquema de numeração e com detalhes adicionais de cardinalidade e tamanho para cada elemento sumarizado. De posse desses sumários ``enriquecidos'' de informações, o catálogo é então preenchido com todas essas especificidades, considerando também os aspectos de fragmentação e alocação. O tipo de sumário de estrutura utilizado é o \textit{DataGuide} e o tipo de esquema de numeração é o \textit{P-CONTAINMENT}.

Na estratégia proposta, o cliente que realiza a consulta pode ser qualquer um dos sítios da rede e todos eles devem ter uma cópia do catálogo, uma vez que as estimativas são obtidas a partir da captura da cardinalidade e do tamanho armazenados nesse.

O fato de um nó no sumário representar um grupo de nós do documento, faz com que seja necessário incrementar a cardinalidade e recalcular o tamanho de cada nó agrupado durante a construção do sumário. A \figref{fig:sumarioDetalhado} exibe um documento e o seu sumário. É possível visualizar a representação da cardinalidade e do tamanho conforme dito. Além disso, é perceptível a necessidade de refletir os tamanhos nos nós ancestrais, uma vez que uma consulta a um determinado nó captura também seus descendentes, logo, o tamanho do nó alvo da consulta é reflexo dos seus descendentes.


\begin{figure}[!hbt]
\center
\subfigure[]
{
  \label{fig:documentoXml}
  \includegraphics[scale=0.9]{figuras/documentoXml.png}
}
\qquad
\subfigure[]
{
  \label{fig:arvoreDetalhada}
  \includegraphics[scale=0.9]{figuras/arvoreDetalhada.png}
}
\caption{Sumario detalhado (b) de um documento XML (a)}
\label{fig:sumarioDetalhado}
\end{figure}

Cada tamanho armazenado no catálogo representa a média dos tamanhos dos nós agrupados. Na \figref{fig:sumarioDetalhado}, o tamanho do elemento $e$ é 3MB, o qual é a média dos seus tamanhos no documento XML. Dessa forma, uma consulta cujo alvo seja o elemento $e$, a estimativa de tamanho obtida é $2*3MB$, uma vez que o cálculo da estimativa de tamanho é dado pelo produto da cardinalidade pelo tamanho médio.

% O tamanho armazenado no catálogo é a média dos tamanhos dos nós agrupados. A escolha por armazenar a média ao invés do tamanho total foi feita com o intuito de evitar o recalculo dos tamanhos quando pequenas atualizações fossem feitas nos documentos. Dessa forma, quando o conteúdo de um nó é atualizado em um documento e essa atualização é ínfima, então não há impacto na média dos tamanhos, mas se fosse armazenado o tamanho total representado por cada agrupamento no sumário, seria necessário alterar o valor.

% Alguns fatores são relevantes para avaliar a estratégia, tais como: a precisão das estimativas de cardinalidade e tamanho dos elementos envolvidos e o tempo empregado para obter as estimativas.

%===================================================================
\section{Arquitetura ETX}
%===================================================================

% Divisao em offline e online: \cite{HawL09}, \cite{ObermeierBW07}
A arquitetura da estratégia ETX é dividida em dois módulos: um módulo secundário de construção do catálogo ($MS$) e um módulo principal de estimativas ($MP$), conforme \figref{fig:arquitetura}. O primeiro gera, a partir do documento XML, os metadados necessários para estimar a cardinalidade e o tamanho das consultas. Quando ocorrem mudanças significativas sobre os dados, os metadados devem ser atualizados. O segundo módulo é responsável por receber a consulta global e obter as estimativas dos resultados parciais nos sítios envolvidos.

\begin{figure}[!hbt]
\centering
\includegraphics[width=.5\textwidth]{./figuras/arquitetura.png}
\caption{Arquitetura ETX}
\label{fig:arquitetura}
\end{figure}

Os dois módulos são formados por alguns componentes de \textit{software} que se comunicam entre si e permitem a implementação da estimativa de tamanho para resultados parciais sobre dados XML fragmentados e distribuídos.

%===================================================================
\noindent \textbf{Módulo Secundário (MS)}
%===================================================================

O módulo secundário é assim chamado por trata-se de um módulo usado uma única vez para cada base de dados. Isso decorre do fato dele ser o responsável pela coleta e armazenamento dos dados que serão usados no processo de estimativa. Uma vez que o catálogo é gerado, esse módulo tem sua atividade suspensa até que a base mude e seja necessária a regeração do catálogo. O módulo secundário pode ser visualizado em duas partes, conforme \figref{fig:secundario}. A primeira parte representa o contexto do trabalho em que o documento XML passa pelas fases de fragmentação, alocação e replicação. A segunda parte consiste do processo de sumarização e numeração do documento XML. Essas duas partes do $MS$ são responsáveis pela geração do catálogo a partir dos dados obtidos nas fases citadas e de informações adicionais como a cardinalidade, o tamanho e a localização individual de cada elemento.

\begin{figure}[!hbt]
\centering
\includegraphics[width=.9\textwidth]{./figuras/secundario.png}
\caption{Arquitetura: Módulo Secundário}
\label{fig:secundario}
\end{figure}

% A cardinalidade de cada elemento não é armazenada no sumário porque ela depende também da localização.
% Cada nó do sumário representa um agrupamento de nós do documento XML, consequentemente, um nó do sumário pode estar fragmentado e, assim, ter cardinalidade e tamanho diferentes dependendo da localização. O processo de estimativa deve considerar as cardinalidades locais para o cálculo dos tamanhos dos resultados parciais, caso contrário, a precisão seria ruim.

Dada uma coleção homogênea de documentos XML, são gerados vários sumários, um para cada documento. Todos os sumários têm a mesma numeração de elementos, indicada por tuplas do tipo \textless$ start,end,parent\_start$\textgreater. Essa numeração igual decorre do fato de todos os documentos ter a mesma estrutura. Cada nó do sumário representa um agrupamento de nós de um documento com sua cardinalidade e tamanho médio e, esse nó é assim representado no catálogo.

Com o uso da fragmentação horizontal, os documentos da coleção são fragmentados e assim um dado elemento pode ter cardinalidade e tamanho diferentes no catálogo. A tupla do elemento é única no catálogo, mas essa tupla pode estar em mais de um fragmento, já que ela representa um grupo de nós. Dessa forma, uma tupla representada no catálogo tem informação do fragmento no qual ela está, sua cardinalidade e tamanho médio.

A \figref{fig:colecao} exibe uma coleção homogênea de documentos. As tuplas visualizadas no sumário da figura são iguais para todos os documentos da coleção, mas as cardinalidades e tamanhos são diferentes. Com a fragmentação horizontal da coleção, os documentos pertencem ao $Fragmento 1$ ou ao $Fragmento 2$. No exemplo, a tupla \textless 4,5,1\textgreater é representada no catálogo para o $Fragmento 1$ com cardinalidade $3$ e, para o $Fragmento 2$, com cardinalidade $1$. Essa diferença de valores de cardinalidades de uma mesma tupla em fragmentos distintos também acontece com os tamanhos dos nós. Sendo assim, é perceptível a importância de armazenar no catálogo as informações de cardinalidade e tamanho médio de acordo com a fragmentação e alocação dos nós.

\begin{figure}[!hbt]
\centering
\includegraphics[width=.9\textwidth]{./figuras/exemploColecao.png}
\caption{Exemplo coleção de documentos}
\label{fig:colecao}
\end{figure}

O catálogo armazena as informações sobre a base distribuída, contendo as definições dos fragmentos, além de informações sobre a alocação e as estatísticas dos fragmentos e dos sítios remotos. A existência prévia do contexto definido pelo módulo secundário é uma premissa fundamental para a estratégia proposta, uma vez que o módulo principal precisa dos dados armazenados e fornecidos pelo catálogo. Uma visão geral da arquitetura do módulo secundário é exibida na \figref{fig:secundario}.

% A saída do módulo secundário deve ser gerada antes da execução do módulo principal, uma vez que este último utiliza a saída do primeiro no processo de estimativa. 

%===================================================================
\noindent \textbf{Módulo Principal (MP)}
%===================================================================

O módulo principal foi assim nomeado por ser o módulo responsável pela captura das informações no catálogo e, a partir dessas, indicar os valores dos resultados estimados para cada consulta a ele submetida. A \figref{fig:principal} exibe o módulo principal da ETX. Esse módulo recebe uma consulta XPath ou XQuery textual, a qual é analisada e convertida em uma estrutura de árvore. No caso da consulta ser apenas uma expressão de caminho simples, a árvore gerada será representada apenas por um único caminho. 
% Durante essa etapa, é importante marcar o nó alvo para que este seja posterior e facilmente identificado, visto que é ele quem determina a raiz da árvore de resultado.

\begin{figure}[!hbt]
\centering
\includegraphics[width=.9\textwidth]{./figuras/principal.png}
\caption{Arquitetura: Módulo Principal}
\label{fig:principal}
\end{figure}

Após a fase de conversão, existe a fase de redução. Essa fase é responsável por reduzir a expressão da consulta quando ela possui algum nó que seja único no sumário. Um nó $l_i$ é dito único quando ele é livre de homônimos, dessa forma, só existe um nó com $rotulo(l_i)$ no sumário. Seja a expressão de caminho $l_1[l^1]/.../l_{k-1}[l^{k-1}]/l_k[l^k]/.../l_n[l^n]$ onde $l_{k}$ é único, então após a redução, a expressão será $l_k[l^k]/.../l_n[l^n]$.

A expressão é percorrida a partir do elemento único e, se existir mais de um que seja único, é importante considerar aquele vizinho à extrema direita, o mais próximo possível do elemento alvo para que assim o percurso seja reduzido ao máximo. Dada a consulta $l_1[l^1]/.../l_{k-1}[l^{k-1}]/l_k[l^k]/l_{k+1}[l^{k+1}]/.../l_n[l^n]$, se $l_{k}$ e $l_{k+1}$ são únicos, a expressão após a redução deve ser $l_{k+1}[l^{k+1}]/.../l_n[l^n]$. Essa fase de redução evita gastos desnecessários com análise irrelevante de nós da expressão. É importante observar que a redução é aplicada apenas sobre o caminho principal da expressão da consulta. Além disso, a redução deve ocorrer até, no máximo, o nó alvo.

Considere o documento XML da \figref{fig:livreHomonimo} e a expressão de consulta $a//s/p/u$. Observe que o elemento $u$ é único no DataGuide. Dessa forma, sendo $u$ um elemento livre de homônimos, a consulta $a//s/p/u$ poderia ser reduzida simplesmente para $//u$. Assim como, a consulta $a/c/s/p$ poderia ser reduzida para $//c/s/p$, visto que $c$ é único.

\begin{figure}[!hbt]
\center
\subfigure[Documento XML]
{
  \label{fig:exsumDocumentoXml}
  \includegraphics[scale=0.7]{figuras/exsumDocumentoXml.png}
}
\qquad
\subfigure[Sumário com numeração]
{
  \label{fig:exsumNumerado}
  \includegraphics[scale=0.7]{figuras/exsumNumerado.png}
}
\caption{Exemplo com elemento livre de homônimo}\label{fig:livreHomonimo}
\end{figure}

Após a fase de redução, a árvore da consulta passa pela fase de casamento com a tabela de caminhos. Nessa fase, é obtida a lista de tuplas que satisfazem as expressões da consulta. A tabela de caminhos construida conforme foi proposto por \cite{HawL09} foi extendida para armazenar as tuplas do elemento raiz e do elemento alvo de cada caminho. Dessa forma, uma expressão de consulta $a/t//p$ sobre um documento cujo sumário é ilustrado na \figref{fig:livreHomonimo}, é dividida em duas expressões $a/t$ e $//p$. O resultado do casamento retorna apenas as tuplas \textless 13,14,8\textgreater \space e \textless 20,23,11\textgreater \space de $//p$, pois as demais tuplas desse elemento alvo, \textless 5,6,2\textgreater \space e \textless 8,9,5\textgreater, não são descendentes do elemento $t$, alvo da expressão $a/t$. Essa conclusão é obtida a partir das regras de parentescos impostas pela tipo de numeração adotado, \textit{P-CONTAINMENT}, onde as tuplas retornas pertencem ao intervalo de descendência de \textless 18,25,1\textgreater.

Para cada tupla de cada nó alvo obtido ao final da fase de casamento, é feita uma consulta no catálogo para capturar sua cardinalidade e tamanho médio em cada fragmento. Esses valores definem o tamanho do resultado parcial em cada fragmento. O tamanho do resultado parcial estimado é dado pelo produto desses valores obtidos em cada fragmento.

%===================================================================
\section{Especificação}
%===================================================================

O ambiente é composto por um conjunto de sítios $S=\lbrace s_{1}, s_{2}, \ldots, s_{n}\rbrace$ conectados por uma rede de computadores. Cada sítio possui uma cópia da ETX, por conseguinte, todos os sítios têm uma cópia do catálogo. Os sítios possuem um subconjunto dos fragmentos distribuídos segundo alguma estratégia de alocação.

% Fragmentacao e Replicacao
Nas fases de fragmentação e replicação, são consideradas a fragmentação horizontal \cite{Andrade06} e a replicação parcial \cite{Moreira09}. A fragmentação horizontal mantém a mesma árvore de estrutura para todos os fragmentos. Além disso, a alocação adotada é aleatória.

% pag 10 - Estimating Answer Sizes for XML Queries (Yuqing Wu, Jignesh M. Patel, and H. V. Jagadish)
% Usually, there are not many element tags defined in an XML document
% É fácil perceber que dada a árvore do documento XML $G$ e seu \textit{DataGuide} $D$, temos \begin{math} ca(G) \geqslant ca(D) \end{math}, onde $ca$ indica cardinalidade.

% o sumario tem que ter um atributo no objeto elemento que indique se eh ou nao node unico

% Sumarizacao e Numeracao
O sumário adotado é o \textit{strong DataGuide}, o qual permite a representação de nós homônimos, desde que estes sejam alcançados por caminhos diferentes a partir da raiz. Essa escolha minimiza as falhas na precisão das estimativas, uma vez que evita que elementos que não satisfazem realmente a consulta sejam considerados no cálculo. Essa seleção de elementos indesejados é claramente perceptível em alguns tipos de sumarização, como acontece no \textit{minimal DataGuide} ou no \textit{EXsum} \cite{FilhoH08}, visto que, todos os nós de mesmo rótulo são agrupados independente de serem alcançados por caminhos diferentes. O esquema de numeração adotado é o P-CONTAINMENT, logo cada nó do sumário é associado a uma tupla do tipo \textless$ start,end,parent\_start$\textgreater.

Após a sumarização e a numeração, é construída uma tabela com todos os caminhos possíveis do sumário, assim como foi proposto por \cite{HawL09}. Além disso, para cada caminho, são armazenadas as tuplas associadas aos nós raiz e alvo da expressão. Essa tabela serve para viabilizar a fase de casamento de forma mais rápida e prática.

Qualquer sítio da rede pode requisitar uma consulta e ele mesmo é capaz de estimar os tamanhos dos resultados parciais, visto que, todo sítio possui uma cópia do catálogo de dados global e uma instância do Módulo Principal da ETX.

O Módulo Secundário é executado uma única vez para geração do catálogo. Em caso de alteração nos dados da base, o catálogo deveria ser atualizado, mas essa função, atualmente, não é comtemplada pela estratégia proposta.

A fase de fragmentação do Módulo Secundário, é do tipo horizontal \cite{Figueiredo07}. Dada uma base de dados XML \textit{multiple document} homogênea $D=\lbrace d_{1},d_{2},..,d_{n}\rbrace$, onde todos os elementos $d_{i} \in D$ respeitam a mesma estrutura, é aplicado um processo de fragmentação de dados XML sobre esta base, formando um conjunto de fragmentos $F=\lbrace f_{1}, f_{2}, \ldots, f_{k}\rbrace$. Cada fragmento é definido como $f_{i} = \langle D, \sigma_{\mu} \rangle$, onde $\sigma_{\mu}$ corresponde a uma expressão de seleção, sendo $\mu$ um predicado de seleção ou composição de predicados desse tipo. Um fragmento $f_{i}$ é composto por todos os documentos $d_{i} \in D$ que satisfaçam a expressão $\sigma_{\mu}$. Esse processo de fragmentação garante que cada documento de $D$ está contido em algum fragmento e que os fragmentos de $F$ não possuem interseção entre si.

Para cada documento $d_{i} \in D$, o Módulo Secundário da ETX gera um sumário tipo \textit{DataGuide}, $dg_{k}$, com informações adicionais de cardinalidade e tamanho médio de cada elemento existente. Essas informações constituem o catálogo juntamente com os dados de fragmentação e alocação.

Uma consulta $Q$ submetida por um cliente e suportada pela estratégia corresponde a um conjunto de subconsultas de leitura tal que $Q=\lbrace q_{1}, q_{2}, \ldots, q_{m} \rbrace$ e cada subconsulta requisita dados de dois ou mais fragmentos alocados em diferentes sítios. Dessa forma, é necesário decompor a consulta para identificar quais os fragmentos envolvidos.

O processo de decomposição precisa das informações de como a base está fragmentada, e, para satisfazer essa necessidade, é utilizado o catálogo de dados global exibido na \figref{fig:catalogo}. Dessa forma, o catálogo é fundamental em dois momentos distintos no Módulo Principal: no processo de decomposição da consulta fornecendo as informações da fragmentação e no processo de captura da cardinalidade e tamanho médio armazenados.

\begin{figure}[!hbt]
\centering
\includegraphics[width=.7\textwidth]{./figuras/catalogo.png}
\caption{Esboço do Catálogo}
\label{fig:catalogo}
\end{figure}

Esse catálogo consiste de um arquivo XML que armazena as seguintes informações para cada elemento diferente representado nos sumários:

\begin{itemize}
 \item{tupla: identificação de um elemento no sumário com \textless$ start,end,parent\_start$\textgreater;}
 \item{fragmento: referência para o fragmento onde está alocado o elemento;}
 \item{cardinalidade: quantidade de nós representados pelo elemento no sumário;}
 \item{tamanhoMedio: valor médio em bytes do elemento;}
\end{itemize}

Um fragmento possui as seguintes informações:

\begin{itemize}
\item{identificador: código que identifica unicamente um fragmento no sistema;}
\item{critério de seleção: expressão de seleção que define quais documentos da base original estão contidos em um fragmento;}
\item{sítios de alocação: identificador e endereço dos sítios que possuem uma cópia dos dados do fragmento. Essa informação é necessária para o segundo passo da decomposição de consultas.}
\end{itemize}

Cada fragmento $f_{i} \in F$ da coleção $D$ possui um conjunto de predicados simples $P_{f_{i}}=\lbrace P_{1}, P_{2}, \ldots, P_{k}\rbrace$. Seja $q$ uma consulta baseada na especificação XQuery com um conjunto de predicados $P=\lbrace p_{1}, p_{2}, \ldots, p_{m}\rbrace$ e um conjunto de expressões de caminho $E=\lbrace e_{1}, e_{2}, \ldots, e_{n}\rbrace$. As expressões pertencentes a $E$ correspondem às expressões encontradas nos predicados e na cláusula de retorno de $q$.

Considere $F_{q}=\lbrace f_{1}, f_{2}, \ldots, f_{x}\rbrace$, $F_{q} \subseteq F$, o conjunto de fragmentos envolvidos na consulta $q$. Para que sejam identificados os fragmentos do conjunto $F_{q}$, os seguintes passos são executados:

\begin{enumerate}
 \item{Para cada $p_{j} \in P$, se $p_{j} \in P_{f_{i}}$, então adicionar o fragmento $f_{i}$ no conjunto $F_{q}$;}
 \item{Para cada $e_{l} \in E$, se $e_{l}$ é pré-fixada por algum caminho simples $P_{y} \in P_{f_{i}}$, e $e_{l}$ não tem nenhuma comparação de valor e nenhuma aplicação de função, então adicionar o fragmento $f_{i}$ no conjunto $F_{q}$.}
\end{enumerate}

O passo 1 analisa os predicados usados na consulta que também são utilizados na definição dos fragmentos. O passo 2 trata os casos em que a consulta contem expressões de caminho com prefixo que participa de alguma definição dos fragmentos baseado em um teste existencial. Vale ressaltar que esses dois casos não são exclusivos. Ambos podem acontecer em uma única consulta. Se nenhum dos casos for aplicado à consulta, o conjunto $F_{q}$ recebe todos os fragmentos de $F$.

As consultas XQuery que fazem parte do escopo deste trabalho possuem apenas cláusulas com expressões de caminho simples. Em \cite{PaparizosWLJ04} os autores citam que sempre é possível transformar uma expressão de caminho em uma expressão de caminho simples, utilizando-se XQuery. Conforme a estrutura da \figref{fig:xmark}, as consultas da Tabela \ref{tab:predicadosAninhados} foram reescritas na Tabela \ref{tab:reescritaExpressoes}, somente utilizando-se expressões de caminho simples.

\begin{figure}[!hbt]
\centering
\includegraphics[width=.9\textwidth]{./figuras/xmark.png}
\caption{Esquema da base de dados XMark}
\label{fig:xmark}
\end{figure}

\begin{table}[!hbt]
\centering
\begin{tabular}{|c|l|}
\hline
(a) & /site/regions/asia/item[description=``gold'']/mailbox \\ \hline
(b) & /site/people/person[profile/income=50000]/name[homepage=``bob@gmail.com''] \\ \hline
\end{tabular}
\caption{Exemplos de predicados aninhados} \label{tab:predicadosAninhados}
\end{table}

\begin{table}[ht!]
\centering
\begin{tabular}{|c|l|}
\hline
\multirow{3}{*}{(a)} & for \$i in document(``xmark.xml'')/site/regions/asia/item\\ & where \$i/description = ``gold'' \\ & return \$i/mailbox\\ \hline
\multirow{4}{*}{(b)} & for \$p in document(``xmark.xml'')/site/people/person\\ & where \$p/profile/income=50000\\ & and \$p/name/homepage=``bob@gmail.com'' \\ & return \$p/name\\ \hline
\end{tabular}
\label{tab:reescritaExpressoes} \caption{Reescrita das expressões em XQuery}
\end{table}

O passo seguinte da decomposição é a criação das subconsultas. Esse procedimento é feito a partir da consulta original e dos fragmentos $F_{q}$. A cláusula WHERE é utilizada no processo de decomposição para definir a qual fragmento a consulta se refere. As subconsultas são criadas com o mesmo conteúdo da consulta $q$, modificando o parâmetro da função \texttt{collection} pelo valor do identificador do fragmento $f_{i}$, utilizando a expressão da cláusula WHERE que identificou o fragmento e a expressão da cláusula RETURN a ela relacionada.

Dada a consulta abaixo, para o contexto da \figref{fig:esquemaItens} e da \tabref{tab:alocacaoAvaliacao}. Ela é decomposta em duas subconsultas, uma para o fragmento $f_{01}$ e outra para $f_{02}$ determinadas pelos predicados definidos na cláusula WHERE.

\begin{verse}
\small
FOR \$x IN collection(``$Itens$'')/Item \\
FOR \$y IN collection(``$Itens$'')/Item \\
WHERE \$x/Nome = \$y/Nome \\
AND \$x/[Secao=``Livro''] \\
AND \$y/[Secao=``Cd''] \\
RETURN \textless itens\textgreater \$x/ResenhaClientes, \$y/HistoricoPrecos \textless \textbackslash itens\textgreater \\
\end{verse}

Para as subconsultas, são obtidas as tuplas referentes aos alvos $ResenhaClientes$ e $HistoricoPrecos$. De posse das tuplas, é feita a captura da cardinalidade e do tamanho médio associado a elas no catálogo. Essas informações consultadas no catálogo consideram apenas os fragmentos $f_{01}$ e $f_{02}$, os quais são determinados pelos predicados de cada subconsulta, conforme \tabref{tab:alocacaoAvaliacao}. Os tamanhos estimados para os resultados parciais são obtidos pelo produto da cardinalidade com o tamanho médio, conforme exemplificado mais adiante neste capítulo.

\begin{figure}[!hbt]
\centering
\includegraphics[width=0.6\linewidth]{figuras/esquemaItens.png}
\caption[Esquema dos Documentos da Base de Dados]{Esquema dos Documentos da Base de Dados}\label{fig:esquemaItens}
\end{figure}

\begin{table}[ht]
\centering
\begin{tabular}{|c|l|l|}
\hline
\textbf{Fragmento} & \textbf{Critério de Seleção} & \textbf{Sítios}\\ \hline
$f_{01}$ & $/Item/Secao = 'Livro'$ & $s_1, s_7$  \\ \hline
$f_{02}$ & $/Item/Secao = 'Cd'$ & $s_2, s_6$ \\ \hline
$f_{03}$ & $/Item/Secao = 'Dvd'$ & $s_3, s_5$ \\ \hline
$f_{04}$ & $/Item/Secao = 'Brinquedo'$ & $s_4$ \\ \hline
$f_{05}$ & $/Item/Secao = 'Jogos' $ & $s_5$ \\ \hline
$f_{06}$ & $/Item/Secao = 'Eletronicos' $ & $s_6$ \\ \hline
$f_{07}$ & $/Item/Secao = 'Perfumes' $ & $s_7$ \\ \hline
\end{tabular}
\caption{Alocação dos Fragmentos para Avaliação} \label{tab:alocacaoAvaliacao}
\end{table}


% Consultas
As consultas suportadas pela estratégia ETX possuem algumas restrições de escopo. A princípio, a estratégia proposta é focada nas consultas XPath de eixos pai-filho e ancestral-descendente e nas consultas XQuery de formato FLWR (FOR-LET-WHERE-RETURN) sem aninhamento nem expressões condicionais.

A cláusula WHERE apresenta somente predicados existenciais. Esses predicados indicam, necessariamente, a quantidade de subconsultas. Esses predicados são iguais aos predicados determinantes do processo de fragmentação. Cada cláusula FOR tem uma única variável. O elemento alvo das subconsultas XQuery é encontrado no final do caminho principal da expressão de caminho da cláusula RETURN.

Tanto para XPath quanto XQuery, o tamanho do alvo deve considerar o tamanho de todos os seus descendentes, visto que o resultado gerado captura todos esses elementos. Feitas algumas restrições no universo de consultas considerado, é possível então analisar as fases do módulo principal.

% restrições de valor
Não faz parte do escopo deste trabalho, as consultas com predicados de valor. Estimativas de cardinalidade de consultas envolvendo restrições de valor foram extensivamente estudadas no contexto relacional. Nesses estudos, histogramas são usados para representar, de forma compacta, a distribuição dos valores. Enfoques similares foram propostos para consultas XML \cite{PolyzotisG02},\cite{AboulnagaAN01}.

% Casamento
% A fase de casamento da árvore de consulta com o sumário é extremamente decisiva para o processo de estimativa, pois o modo como as árvores de correspondência são obtidas influencia na precisão da captura dos nós alvo relevantes para o resultado.

% No início da fase de casamento, é feita a decomposição da consulta em expressões de caminho simples para que estas sejam buscadas na tabela de caminhos do sumário.
% 
% Cada expressão pode ser decomposta em um conjunto de expressões. Para cada expressão, é encontrado um conjunto de tuplas dos seus elementos raiz e alvo. As tuplas do elemento raiz servem para a interseção entre as expressões de caminho, enquanto as tuplas do alvo são usadas no final para capturar as informações no catálogo e obter as estimativas. As tuplas são fornecidas pelo tabela de caminhos do sumário.

% Após a fase de casamento, restam as tuplas do alvo dos caminhos que satisfazem a consulta. Finalmente, de posse dessas tuplas, é feita a captura das informações no catálogo.

%===================================================================
\section{Cenário}
%===================================================================

Nesta seção, para exemplificar o funcionamento da estratégia proposta, é utilizada uma coleção de pessoas $CPessoa$ cuja estrutura é exibida na \figref{fig:cpessoa}. A base $CPessoa$, de múltiplos documentos (MD), é fragmentada horizontalmente em dois fragmentos definidos sobre o tipo de pessoa, conforme Tabela \ref{tab:fragmentosColecao}.

%-------
% FIGURA Pessoas
%-------

\begin{figure}[!hbt]
\centering
\includegraphics[width=1.0\textwidth]{./figuras/estruturaPessoas.jpg}
\caption{Estrutura $CPessoa$} \label{fig:cpessoa}
\end{figure}

\begin{table}[ht]
\centering
\begin{tabular}{|c|l|l|}
\hline
\textbf{Base} & \textbf{Fragmento} & \textbf{Definição}\\ \hline
$CPessoa$ & $f_{c1}$ & $\langle CPessoa, \sigma_{/tipo = 'aluno'} \rangle$ \\ \hline
$CPessoa$ & $f_{c2}$ & $\langle CPessoa, \sigma_{/tipo = 'professor'} \rangle$ \\ \hline
\end{tabular}
\caption{Fragmentos de $CPessoa$} \label{tab:fragmentosColecao}
\end{table}

Posteriormente, é feita uma nova fragmentação horizontal sobre os fragmentos de $CPessoa$. Para o primeiro fragmento da coleção ($f_{c1}$), é aplicada a fragmentação sobre $sexo$, enquanto para o segundo fragmento da coleção ($f_{c2}$), são gerados os fragmentos sobre $titulacao$, conforme Tabela \ref{tab:fragmentosAlunoProfessor}.

\begin{table}[ht]
\centering
\begin{tabular}{|c|l|l|}
\hline
\textbf{Base} & \textbf{Fragmento} & \textbf{Definição}\\ \hline
$aluno$ & $f_{a1}$ & $\langle f_{c1}, \sigma_{/sexo = 'F'} \rangle$ \\ \hline
$aluno$ & $f_{a2}$ & $\langle f_{c1}, \sigma_{/sexo = 'M'} \rangle$ \\ \hline
$professor$ & $f_{p1}$ & $\langle f_{c2}, \sigma_{/curriculo/titulacao = 'Me'} \rangle$ \\ \hline
$professor$ & $f_{p2}$ & $\langle f_{c2}, \sigma_{/curriculo/titulacao = 'Dr'} \rangle$ \\ \hline
$professor$ & $f_{p3}$ & $\langle f_{c2}, \sigma_{/curriculo/titulacao \neq 'Me' \wedge /curriculo/titulacao \neq 'Dr'} \rangle$ \\ \hline
\end{tabular}
\caption{Fragmentos de $aluno$ e $professor$} \label{tab:fragmentosAlunoProfessor}
\end{table}

O fragmento $f_{a1}$ contém todos os documentos de $f_{c1}$ cujo elemento $sexo$ tem o conteúdo igual a $F$. Por sua vez, o fragmento $f_{a2}$ contém todos os documentos de $f_{c1}$ cujo elemento $sexo$ tem o conteúdo igual a $M$. O fragmento $f_{p1}$ contém todos os documentos de $f_{c2}$ cujo elemento $titulacao$ tem o conteúdo igual a $Me$. O fragmento $f_{p2}$ contém todos os documentos de $f_{c2}$ cujo elemento $titulacao$ tem o conteúdo igual a $Dr$. Por fim, o fragmento $f_{p3}$ corresponde aos documentos de $f_{c2}$ que não estão em $f_{p1}$ e $f_{p2}$, ou seja, documentos cujo conteúdo do elemento $titulacao$ não possuem os valores $Me$ e $Dr$.

Suponha o ambiente composto pelo conjunto de sítios $S = \lbrace s_1, s_2, s_3 \rbrace$ e cuja alocação é apresentada na Tabela \ref{tab:alocacao}.

\begin{table}[ht]
\centering
\begin{tabular}{|c|l|l|}
\hline
\textbf{Fragmento} & \textbf{Critério de Seleção} & \textbf{Sítios}\\ \hline
$f_{a1}$ & $/sexo = 'F'$ & $s_1$  \\ \hline
$f_{a2}$ & $/sexo = 'M'$ & $s_2$ \\ \hline
$f_{p1}$ & $/curriculo/titulacao = 'Me'$ & $s_3$ \\ \hline
$f_{p2}$ & $/curriculo/titulacao = 'Dr'$ & $s_1$ \\ \hline
$f_{p3}$ & $/curriculo/titulacao \neq 'Me' \wedge /curriculo/titulacao \neq 'Dr'$ & $s_2, s_3$ \\ \hline
\end{tabular}
\caption{Alocação dos Fragmentos no Cenário} \label{tab:alocacao}
\end{table}

Seja a consulta abaixo submetida à estratégia ETX:

\begin{verse}
\small
FOR \$x IN collection(``$CPessoa$'')/pessoa \\
FOR \$y IN collection(``$CPessoa$'')/pessoa \\
WHERE \$x/nome = \$y/nome \\
AND \$x[tipo=``$aluno$''] \\
AND \$y[tipo=``$professor$''][curriculo/titulacao = ``$Dr$''] \\
RETURN \textless resultado\textgreater\$x/historico, \$y/curriculo \textless \textbackslash resultado\textgreater\\
\end{verse}

A consulta é inicialmente decomposta nas seguintes subconsultas $q_a$ e $q_p$:

\begin{verse}
\small
FOR \$a IN collection(``$f_{c1}$'') \\
RETURN \$a/nome, \$a/historico  \\
\end{verse}

\begin{verse}
\small
FOR \$p IN collection(``$f_{c2}$'') \\
WHERE \$p/curriculo/titulacao = ``$Dr$'' \\
RETURN \$p/nome, \$p/curriculo \\
\end{verse}

A primeira subconsulta, $q_a$, não possui predicado e assim o conjunto $f_{q_a}$ recebe todos os fragmentos de $f_a$. Visto que, não há predicados usados na consulta que sejam utilizados na definição dos fragmentos e a consulta não contém expressões de caminho com prefixo que participa da definição de fragmentos baseado em um teste existencial.

A segunda subconsulta, $q_p$, possui predicado e o conjunto $f_{q_p}$ recebe o fragmento de $f_{p2}$, pois o predicado usado na consulta é também utilizado na definição do fragmento.

Para cada subconsulta, a estratégia ETX realiza o casamento da subconsulta com a tabela de caminhos do sumário e identifica a(s) tupla(s) dos elementos alvos. No exemplo, uma única tupla de $nome$, outra de $historico$ e outra de $curriculo$ satisfazem as subconsultas. As tuplas capturadas são \textless$4,5,1$\textgreater, \textless$46,55,1$\textgreater e \textless$22,45,1$\textgreater.

Conforme \figref{fig:pessoasNumerado}, e de posse da(s) tupla(s) do elemento alvo, \textless$4,5,1$\textgreater, \textless$46,55,1$\textgreater e \textless$22,45,1$\textgreater, e já conhecendo quais os fragmentos pertinentes a cada subconsulta, $f_{a1}$, $f_{a2}$ e $f_{p2}$, o catálogo é então pesquisado a fim de obter os valores de cardinalidade e tamanho médio do(s) alvo(s).

\begin{figure}[!hbt]
\centering
\includegraphics[width=1.0\textwidth]{./figuras/pessoasNumerado.png}
\caption{Sumário de $CPessoa$ com numeração} \label{fig:pessoasNumerado}
\end{figure}

Suponha o trecho do catálogo referente ao elemento $curriculo$:
% TODO - Figura catalogo com valores de tupla, fragmento, cardinalidade, tamanhoMedio
\begin{verse}
\small
\textless tupla valor=\textless22,45,1\textgreater \textgreater \\
 \textless tuplaFragmentos \textgreater \\
   \textless tuplaFragmento fragmento=$f_{a1}$ cardinalidade=70425 tamanhoMedio=6MB \textbackslash\textgreater \\
   \textless tuplaFragmento fragmento=$f_{a2}$ cardinalidade=75403 tamanhoMedio=4MB \textbackslash\textgreater \\
   \textless tuplaFragmento fragmento=$f_{p1}$ cardinalidade=6000 tamanhoMedio=18MB \textbackslash\textgreater \\
   \textless tuplaFragmento fragmento=$f_{p2}$ cardinalidade=100 tamanhoMedio=30MB \textbackslash\textgreater \\
   \textless tuplaFragmento fragmento=$f_{p3}$ cardinalidade=15 tamanhoMedio=12MB \textbackslash\textgreater \\
 \textless \textbackslash tuplaFragmentos \textgreater \\
\textless \textbackslash tupla \textgreater \\
\end{verse}

No exemplo, são obtidos os tamanhos estimados $te_{a1}$, $te_{a2}$ e $te_{p2}$, os quais correspondem ao produto da cardinalidade e do tamanho médio da tupla \textless$22,45,1$\textgreater nos fragmentos $f_{a1}$, $f_{a2}$ e $f_{p2}$, respectivamente. Dessa forma, $te_{a1} = 70425*6$, $te_{a2} = 75403*4$ e $te_{p2} = 100*30$.

Neste ponto, a estratégia não estimou o tamanho do resultado final da consulta, mas sim, os tamanhos dos resultados parciais de suas subconsultas. Essas estimativas podem então ser utilizadas por um modelo de custo na escolha dos elementos que serão transferidos entre os sítios.

A estimativa $te_{p2}$ é menor que as demais, consequentemente, os elementos do fragmento $f_{p2}$ são mais indicados para serem movidos do sítio onde estão alocados para um dos sítios onde estão os outros elementos que participarão da junção da consulta.

Para o resultado final da consulta, o fato de existir mais alunos do sexo masculino não implica, necessariamente, que o conjunto $curriculo$ capturado para este grupo é maior que o conjunto $curriculo$ de todos os alunos do sexo feminino. No exemplo, as cardinalidades são 70425 e 75403 para o sexo feminino e masculino, respectivamente. O tamanho do resultado da consulta de $curriculo$ no fragmento $f_{a1}$ não é obrigatoriamente maior que em $f_{a2}$, pois apesar da cardinalidade de $curriculo$ em $f_{a2}$ ser maior, os alunos do sexo feminino têm seus currículos mais densos. A riqueza de informações desses currículos é refletida no tamanho médio armazenado no catálogo. Sendo assim, pode acarretar em uma estimativa de tamanho maior ($te_{a1} \textgreater te_{a2}$, onde $70425*6 \textgreater 75403*4$).

%===================================================================
\section{Algoritmos}%Algoritmos/Prototipo
%===================================================================

Esta seção apresenta os principais algoritmos da ETX. O Algoritmo ETX recebe uma coleção de documentos e uma coleção de consultas globais. Na primeira execução desse algoritmo, ele cria o catálogo através do Módulo Secundário (linha 2). Para cada consulta da coleção recebida, é feita sua decomposição em subconsultas (linha 4). Essas subconsultas são as consultas localizadas para cada fragmento, conforme exibido no cenário ilustrado anteriormente. Para cada subconsulta, o Módulo Principal é executado a fim de obter a estimativa do seu resultado (linha 6).

\incmargin{1em}\begin{algorithm}
%\restylealgo{boxed}
\linesnumbered
\dontprintsemicolon
\caption{ - ETX}\label{etx}
\SetLine
\Entrada{$colecao$, $consultas$}
\Resultado{$estimativas$}
   \Se{$catalogo$ is null}{
      $catalogo \leftarrow MS(colecao)$
   }
   \Enqto{$consulta\_global \leftarrow consultas$}{
      $subconsultas \leftarrow Decomposicao(consulta\_global)$
      \Enqto{$subconsulta \leftarrow subconsultas$}{
         $estimativas \leftarrow MP(subconsulta,catalogo)$
      }
   }
\end{algorithm}\decmargin{0.5em}

O Algoritmo MS é executado pelo Módulo Secundário (MS). Ao receber uma coleção de documentos XML, o MS realiza a fragmentação (linha 1) e seus fragmentos são alocados e replicados nos sítios (linhas 2, 3). A estrutura inicial do catálogo é criada com as informações de fragmentação, replicação e alocação (linha 4). Para cada documento, o MS gera um sumário a partir da árvore do documento XML e aplica sobre esse o esquema de numeração (linhas 6, 7). Após a sumarização e a numeração, é construída uma tabela com todos os caminhos possíveis do sumário, assim como foi proposto por \cite{HawL09} (linha 9).

Na estratégia ETX, a tabela de caminhos é construída uma única vez a partir de um sumário, pois assumimos que todos os documentos possuem a mesma estrutura e consequentemente têm os mesmos caminhos. Finalmente, os dados obtidos e armazenados em cada sumário são inseridos do catálogo (linha 11).

\incmargin{1em}\begin{algorithm}
%\restylealgo{boxed}
\linesnumbered
\dontprintsemicolon
\caption{- Módulo Secundário (MS)}\label{ms}
\SetLine
\Entrada{$colecao$}
\Resultado{$tabela\_caminhos$, $catalogo$}
\Dados{$criterios$, $sitios$}
   $fragmentos \leftarrow Fragmentacao(colecao, criterios);$ \\
   $tabela\_alocacao \leftarrow Alocacao(fragmentos, sitios);$ \\
   $tabela\_alocacao \leftarrow Replicacao(fragmentos, sitios);$ \\
   $catalogo.criar(fragmentos, tabela\_alocacao)$ \\
   \Enqto{$documento \leftarrow colecao$}{
      $arvore\_documento \leftarrow DOM.criar(documento)$ \\
      $sumario\_documento\leftarrow Dataguide.criar(arvore\_documento)$ \\
      \Se{($tabela\_caminhos.vazia()$)}{
         $tabela\_caminhos \leftarrow Hashtable.criar(sumario\_documento)$ \\
      }
      $catalogo.atualizar(sumario\_documento,fragmentos.get(documento))$
   }
\end{algorithm}\decmargin{0.5em}

O Algoritmo MP é executado pelo Módulo Principal (MP). Ao receber uma consulta XPath ou XQuery, o MP a converte no formato de árvore (linha 1). A princípio, é feita a decomposição da consulta em um conjunto de expressões simples e, em seguida, a expressão principal é capturada (linhas 2, 3). A árvore gerada é reduzida caso possua nós de elementos únicos no sumário. A redução é aplicada apenas sobre o caminho principal. Esse processo otimiza a fase de casamento das expressões com a tabela de caminhos (linha 5), conforme visto anteriormente na \figref{fig:livreHomonimo}. As expressões de predicado da consulta determinam o fragmento pertinente a resolução (linha 4).

\incmargin{1em}\begin{algorithm}
%\restylealgo{boxed}
\linesnumbered
\dontprintsemicolon
\caption{ - Módulo Principal (MP)}\label{mp}
\SetLine
\Entrada{$consulta$, $catalogo$}
\Resultado{$estimativa$}
\Dados{$tabela\_caminhos, fragmentos$}
   $arvore\_consulta \leftarrow DOM.criar(consulta)$ \\
   $expressoes \leftarrow Decomposicao(arvore\_consulta);$ \\
   $expressao\_principal \leftarrow expressoes.getPrincipal();$ \\
   $fragmento\_consulta \leftarrow fragmentos.get(expressoes.getPredicado())$ \\
   $tuplas \leftarrow tabela\_caminhos.get(expressao\_principal);$ \\
   \Para{$tupla \in tuplas$}{
      $cardinalidade \leftarrow catalogo.getCardinalidade(tupla,fragmento)$ \\
      $tamanhoMedio \leftarrow catalogo.getTamanho(tupla,fragmento)$ \\
      $estimativa \leftarrow cardinalidade * tamanhoMedio$ \\
   }
\end{algorithm}\decmargin{0.5em}

Para cada tupla encontrada na tabela de caminhos, é feita a estimativa de tamanho com o produto da cardinalidade e tamanho médio armazenados no catálogo. Como uma tupla representa um nó no sumário e este por sua vez representa um agrupamento de nós do documento, é fácil observar que uma tupla pode existir em mais de um fragmento. Logo, as estimativas são separadas por fragmento (linha 7, 8, 9).