%===============================================================================
% CAPITULO 3 - MODELO DE CUSTO
%===============================================================================
\chapter{Modelo de Custo}\label{chp:3-modelo}

O otimizador pode utilizar um modelo de custo para prever o esforço de um dado plano de execução. Por conseguinte, o modelo de custo deve ter um bom conhecimento sobre o ambiente distribuído.

%===============================================================================
% 
%===============================================================================
\section{Fundamentos Básicos} \label{sec:chp-3-fundamentos}

O modelo de custo pode ser dependente ou independente da arquitetura utilizada. O modelo independente considera apenas o custo para os algoritmos que implementam os operadores. O modelo dependente, além do custo dos operadores, considera também os gastos de realocação de dados e consumo de memória. Funções de custo para um modelo dependente de arquitetura possuem os seguintes componentes: o tempo total, o tempo de resposta e o consumo de memória. Os dois primeiros componentes são utilizados para medir o balanceamento entre tempo de resposta e \textit{throughput}. O terceiro é utilizado apenas para descartar planos de execução que necessitem de mais memória do que a disponível \cite{Giovano01}.

%pag 205 (OzsuV99) - adaptado
O tempo total incidente no processamento é considerado uma boa medida do consumo de recursos. Ele é a soma de todos os tempos gastos no processamento das operações da consulta em diversos sítios e na comunicação entre eles. Já o tempo de resposta da consulta é o tempo decorrido para a execução da consulta. No contexto distribuído, o tempo de resposta de uma consulta pode ser significativamente menor que seu tempo total, pois as operações podem ser executadas em paralelo em sítios diferentes.

%pag 205, 214
O tempo total inclui os custos de CPU, E/S e comunicação para cada sítio. O primeiro está relacionado com a execução de operações sobre dados na memória principal. O segundo é o tempo necessário para a execução de operações de entrada e saída de disco, o qual pode ser minimizado com o uso de métodos de acesso rápido aos dados e uso eficiente da memória principal. O terceiro é o tempo necessário para troca de dados entre os sítios que participam da execução da consulta, ele incide no processamento das mensagens e na transmissão dos dados pela rede de comunicação. Desses, o custo de comunicação para a otimização global de consultas distribuídas é considerado o fator mais significativo.

%===============================================================================
% 
%===============================================================================
\section{Descrição} \label{sec:chp-3-descricao}

\subsection{Funções de Custo} \label{sec:chp-3-funcoes}

Um modelo de custo de um otimizador inclui funções para prever o custo de operadores, estatísticas e dados básicos, e também fórmulas para avaliar os tamanhos dos resultados intermediários. Essas funções são tipicamente utilizadas para estimar o quão dispendiosa é cada execução de uma consulta, englobando os custos de utilização da CPU, de transferência de dados entre a memória secundária e a memória principal e de comunicação, no caso de sistemas distribuídos \cite{ElmasriN94}. Uma atribuição importante dessas funçõs é descartar os planos candidatos reconhecidamente ineficientes, reduzindo o espaço de busca durante a otimização. Além disso, algumas heurísticas aplicadas é consulta ainda na etapa de otimização algébrica dependem da aplicação de funções de custo.

O custo de uma estratégia de execução distribuída pode ser expresso de acordo com o tempo total ou o tempo de resposta. O tempo total é a soma de todos os componentes do tempo, enquanto o tempo de resposta é o tempo decorrido desde a inicialização até a conclusão da consulta. Uma fórmula geral para determinar o tempo total pode ser especificada da seguinte forma \cite{OzsuV99}:

\begin{quote}
   \begin{math}
      TempoTotal = T_{CPU} * qtd\_insts + T_{E/S} * qtd\_E/Ss + T_{MSG} * qtd\_msgs + T_{TR} * qtd\_bytes
   \end{math}
\end{quote}

Os dois primeiros termos medem o tempo local de processamento, onde \begin{math}T_{CPU}\end{math} é o tempo de uma instrução da CPU e \begin{math}T_{E/S}\end{math} é o tempo de operação de E/S de disco. O tempo de comunicação é representado pelos dois últimos termos, onde \begin{math}T_{MSG}\end{math} é o tempo fixo de inicialização e recepção de uma mensagem e \begin{math}T_{TR}\end{math} é o tempo de transmissão de uma unidade de dados de um sítio a outro. A unidade de dados é dada aqui em termos de bytes (qtd\_bytes é a soma dos tamanhos de todas as mensagens), mas poderia estar em unidades diferentes (por exemplo, pacotes). Uma hipótese típica é que \begin{math}T_{TR}\end{math} é uma constante. Isso pode ser não verdadeiro para redes remotas, em que alguns sítios estão mais afastados que outros. Porém, essa consideração simplifica bastante a otimização de consultas. Assim, o tempo de comunicação de transferir dados de um sítio para outro é considerado uma função linear de qtd\_bytes \cite{OzsuV99}:

\begin{quote}
   \begin{math}
      TC(qtd\_bytes) = T_{MSG} + T_{TR} * qtd\_bytes
   \end{math}
\end{quote}

Os custos geralmente são expressos em termos de unidades de tempo que por sua vez, podem ser convertidas em outras unidades. Os valores relativos dos coeficientes de custo caracterizam o ambiente distribuído. A topologia da rede influencia bastante a razão entre os componentes. As novas redes, mais rápidas, tanto no nível de redes remotas como no nível de redes locais, favorecem o custo de comunicação quando todos os outros fatores são iguais. Entretanto, a comunicação ainda é o componente de tempo dominante em redes remotas como a Internet, em virtude das distâncias mais longas de onde os dados são recuperados ou até o lugar para onde eles são enviados.

Quando o tempo de resposta de uma consulta é a função de objetivo do otimizador, o processamento local paralelo e as comunicações paralelas também precisam ser consideradas. Uma fórmula geral para o tempo de resposta é \cite{OzsuV99}:

\begin{quote}
   \begin{math}
      TempoResposta = T_{CPU} * seq_{qtd\_insts} + T_{E/S} * seq_{qtd\_E/Ss} + T_{MSG} * seq_{qtd\_msgs} + T_{TR} * seq_{qtd\_bytes}
   \end{math} 
\end{quote}

onde \begin{math}seq_{qtd\_x}\end{math}, em que x pode indicar instruções (\textit{insts}), operações de E/S, mensagens (\textit{msgs}) ou bytes, representa o número máximo de x que deve ser efetuado seqüencialmente para a execução da consulta. Desse modo, qualquer atividade de processamento e comunicação realizada em paralelo é ignorada.

A minimização do tempo de resposta é alcançada com o aumento do grau de paralelismo de execução. Entretanto, isso não implica na redução do tempo total, podendo inclusive aumentá-lo se, por exemplo, houver mais processamentos e transmissões paralelas locais. A minimização do tempo total implica em um crescimento da utilização dos recursos, ampliando assim a vazão do sistema. Na prática, deseja-se é um compromisso entre os dois.

\subsection{Estatísticas} \label{sec:chp-3-estatisticas}

As estatísticas do SGBD são úteis na avaliação da cardinalidade dos resultados parciais das consultas. O principal fator que afeta o desempenho de uma estratégia de execução é o tamanho dos resultados intermediários produzidos. Quando uma operação subseqüente está localizada em um sítio diferente, o resultado parcial precisa ser transmitido pela rede. Assim, é fundamental avaliar o tamanho das frações de operações da álgebra, a fim de diminuir o volume das transferências de dados. Essa estimativa se baseia em informações estatísticas sobre as relações básicas e fórmulas para prever a cardinalidade dos resultados das operações. Há uma dependência direta entre a precisão das estatísticas e o custo de gerenciá-las; as estatísticas mais precisas são as mais onerosas.

% \subsection{Cardinalidade de Resultados Intermediários} \label{sec:chp-3-cardinalidade}
% 
% As estatísticas de bancos de dados são úteis na avaliação da cardinalidade dos resultados intermediários das consultas. Para simplificar, costumam ser adotadas duas hipóteses sobre o banco de dados. A distribuição de valores de atributos em uma relação é considerada uniforme e todos os atributos são independentes, significando que o valor de um atributo não afeta o valor de nenhum outro atributo. Essas duas considerações mostram-se geralmente erradas na prática, mas elas tornam o problema tratável \cite{OzsuV99}.

%===============================================================================
% 
%===============================================================================
\section{Modelo de Custo para Dados Semi-estruturados} \label{sec:chp-3-relacionados}

Diversos trabalhos sobre técnicas de otimização de consultas para dados semi-estruturados presumem a utilização de um modelo de custo para selecionar os melhores planos de execução \cite{HidakaKY07}, \cite{LiuDL07}, \cite{Liu07}, \cite{KimLL01} e \cite{WeinerMH08}.

\cite{LiuDL07} é considerada a primeira abordagem proposta para tratar o problema de custo em sistemas de mediação baseados em XML. O trabalho descreve um \textit{framework} de custo para estimar o custo global de planos de execução candidatos em um sistema de mediação baseado em custo, chamado XLive \cite{DJT05} que integra bases de dados autônomas, heterogêneas e distribuídas. A proposta depende de anotações de custo em uma representação lógica XQuery chamada TGV (\textit{Tree Graph View}). Uma extensão da linguagem MathML \cite{MathML08} é usada para a comunicação de custo entre os diferentes componentes do XLive. Ademais, \cite{LiuDL07} adotam a XAlgebra \cite{DG03} para representação dos planos algébricos, a qual consiste em um adaptação da álgebra relacional para XML. Vale ressaltar o uso de tipos abstratos de dados para definir formalmente cada elemento em um modelo TGV e a definição de uma nova árvore de custo, CAT (\textit{Cost Annotation Tree}) a partir das fórmulas de custo detalhadas para cada componente da TGV.

A proposta de \cite{KimLL01} sugere duas novas técnicas de armazenamento e descreve um modelo de custo baseado nos modelos convencionais para documentos XML em sistemas de gerenciamento de banco de dados relacionais distribuídos (SGBDRDs).

O modelo de custo de \cite{HidakaKY07} atua no nível lógico independente do mecanismo em si. O objetivo desse trabalho é, na verdade, fornecer uma infraestrutura de avaliação para pesquisas de otimização. O modelo de custo consiste de funções recursivas simples baseadas nos construtores da linguagem funcional. \cite{HidakaKY05} detalha as fórmulas de custos para XQuery.
