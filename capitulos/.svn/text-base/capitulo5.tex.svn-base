%===============================================================================
% CAPITULO 5 - DETALHES
%===============================================================================
\chapter{Implementação e Avaliação}\label{chp:5-implementacao_avaliacao}
% 
% A concepção de um modelo de custo é baseada na análise de aspectos referentes ao modelo de dados, de armazenamento e de execução do SGBD, o que tende a tornar as funções de custo muito específicas. Cada novo algoritmo proposto ou novo recurso do banco de dados é geralmente validado através de um modelo de custo próprio. Entretanto, estes modelos não permitem em geral realizar uma análise comparativa de diferentes trabalhos sobre um mesmo tema. Por outro lado, quanto mais genérico o modelo de custo, mais distante ele estará de fornecer resultados realísticos. Em um otimizador de consultas, cujo objetivo é saber ``instantaneamente'' o desempenho de uma consulta no banco de dados, um modelo de custo muito genérico possui uma aplicação muito restrita. Já na avaliação de novas metodologias, técnicas e decisões de projeto de banco de dados, é necessário uma ferramenta que permita avaliar e simular o desempenho futuro do sistema em várias situações, sem privilegiar recursos de um banco de dados específico. Ainda neste caso, a definição de um modelo de custo deve atentar para as principais implementações dos fatores que apresentam maior influência sobre o sistema analisado \cite{Ruberg01}.

%===============================================================================
% IMPLEMENTACAO
%===============================================================================
\section{Implementação}\label{sec:chp-5-implementacao}
% 
% As funções de custo do nosso trabalho são baseadas nas idéias de \cite{HidakaKY07}.
% 
% %Guilherme - pag 46
% A etapa de otimização global da consulta procura obter um plano algébrico de execução de custo mínimo, criando variações equivalentes do plano algébrico obtido na etapa de localização da consulta através de transformações algébricas e aplicando uma função de custo para determinação do melhor plano. A busca do plano ótimo pode se tornar, além de muito difícil e até mesmo impossível, muito cara para o processamento da consulta, o que acaba reduzindo os ganhos obtidos com otimização do plano algébrico. Portanto, esta etapa também deve utilizar heurísticas de otimização algébrica e técnicas de minimização da função de custo que busquem um plano próximo ao ótimo com o menor custo de processamento possível. Apesar de não ser o foco desta dissertação, nesta seção damos uma visão geral sobre a etapa de otimização global.
% %Guilherme - pag 46
% A otimização global de uma consulta distribuída começa com a criação de variações equivalentes do plano algébrico localizado, onde poderão ser aplicadas transformações algébricas como a troca de posição de operações dentro do plano; a substituição da localização de fragmentos, quando existirem réplicas destes fragmentos em diferentes nodos do ambiente distribuído; a inversão de operações filhas de uma operação de união ou junção; etc.
% %Guilherme - pag 47
% Para cada plano algébrico equivalente produzido será calculado o seu custo estimado a partir de uma função de custo. O plano com menor custo será
% escolhido para execução da consuta distribuída. Esta função de custo deverá utilizar e estimar parâmetros para o cálculo do custo de cada operação do plano, de forma a obter o custo total do plano. Dentre estes parâmetros, podemos destacar o volume de dados processados pela operação, o custo de acesso a disco, custo de transmissão de dados por rede, estimativas de volume de dados a partir de histogramas das bases de dados, estimativas do volume de dados retornado por uma operação, etc.
% %Guilherme - pag 47
% Esta etapa de otimização global tem como produto final um plano de execução próximo do ótimo. Cada operação do plano algébrico otimizado deverá
% conhecer o site onde será executado, que pode ser um site remoto ou o próprio SGBD distribuído. Este plano algébrico final será utilizado para a montagem das sub-consultas em XQuery, que executarão todas as operações direcionadas a um mesmo nodo. Caso mais de um nodo remoto seja envolvido na consulta, o mediador será responsável pela composição do resultado final, a partir de uma consulta de composição.

%pag 13
% Dada a complexidade de um sistema de otimização de consultas para bancos de dados, a abordagem de frameworks tem sido proposta com o objetivo de melhorar a extensibilidade e facilitar a construção de otimizadores. A extensibilidade deve ser obtida em relação a álgebra utilizada, regras de transformação, algoritmos para execução de operadores da álgebra e estratégias de busca do plano ótimo. Esses sistemas surgiram sob o contexto de bancos de dados relacionais com o objetivo de facilitar e abstrair a construção de otimizadores para as diferentes álgebras existentes. Algumas dessas propostas, como [BMG93] e [Feg97a], já foram utilizadas para construir otimizadores para SGBDOO's. \cite{Giovano01}

%===============================================================================
% AVALIACAO
%===============================================================================
\section{Avaliação}\label{sec:chp-5-avaliacao}
% 
% O otimizador pode utilizar um modelo de custo, o qual consiste em um conjunto de fórmulas que permite estimar os custos de processamento dos possíveis planos de execução para cada consulta submetida ao banco de dados.

%pag 28
% Vale ressaltar que modelo de custo proposto não visa gerar um indicador único de custo, mas uma variedade de parâmetros que podem ser utilizados nas mais diversas aplicações. Dentre estas aplicações, destacamos a estimativa de volume ocupado \underline{pelas coleções} na etapa de projeto físico de um banco de dados, a configuração do cache de dados de um SGBD, a análise de impacto de técnicas para agrupamento físico \underline{de objetos} e a análise comparativa dos algoritmos típicos para processamento de \underline{expressões de caminho}. Enfim, os parâmetros de custo apresentados propiciam uma vasta gama de possibilidades de uso e favorecem a compreensão do processamento de \underline{expressões de caminho em bases de objetos}. \cite{Ruberg01}
